buildscript {
    repositories {
        mavenCentral()
        jcenter()
        maven {
            name = 'forge'
            url = 'https://files.minecraftforge.net/maven'
        }
        maven {
            name = 'SpongePowered'
            url = 'https://repo.spongepowered.org/repository/maven-public'
        }
    }
    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:2.3-SNAPSHOT'
        classpath 'org.spongepowered:mixingradle:0.6-SNAPSHOT'
        classpath 'com.github.jengelman.gradle.plugins:shadow:2.0.4'
    }
}

apply plugin: 'net.minecraftforge.gradle.forge'
apply plugin: 'org.spongepowered.mixin'
apply plugin: 'com.github.johnrengelman.shadow'
// Only edit below this line, The above code adds and enables the necessary things for Forge to be setup.

version = "1.9.11" // The jar version number that will be output when building.
group = "com.krazzzzymonkey" // https://maven.apache.org/guides/mini/guide-naming-conventions.html
archivesBaseName = "Catalyst" // The jar name that will be output when building.

sourceCompatibility = targetCompatibility = '1.8' // Need this here so eclipse task generates correctly.
compileJava {
    sourceCompatibility = targetCompatibility = '1.8'
    options.encoding = 'UTF-8' // Removes unicode errors cba to translate all of them to basic latin.
}

minecraft {
    version = "1.12.2-14.23.5.2847" // The version of forge.
    runDir = 'run' // The directory of where the files that are output when doing runClient will be put.
    // The mappings can be changed at any time, And must be in the following format.
    // snapshot_YYYYMMDD   Snapshot are built nightly.
    // stable_#            Stables are built at the discretion of the MCP team.
    // Use non-default mappings at your own risk. They may not always work.
    // Simply re-run your setup task after changing the mappings to update your workspace.
    mappings = "stable_39"
    coreMod = 'com.krazzzzymonkey.catalyst.mixin.MixinLoaderForge' // The directory of the mixin loader needed for when ur doing runClient.
    makeObfSourceJar = false // An Srg named sources jar is made by default. Which is pretty useless so disabled.
}

repositories {
    mavenCentral()
    maven {
        name = 'spongepowered-repo'
        url = 'https://repo.spongepowered.org/repository/maven-public/'
    }
    jcenter()
}

dependencies {
    compile group: "com.googlecode.json-simple", name: "json-simple", version: "1.1.1"
    compile('org.spongepowered:mixin:0.7.11-SNAPSHOT') { // Do NOT update this to 8.0 or above, It breaks compatibility with future client.
        exclude module: 'launchwrapper'
        exclude module: 'guava'
        exclude module: 'gson'
        exclude module: 'commons-io'
        exclude module: 'log4j-core' // We want to exclude this as well because 0.7.11 includes it too new for MC.
    }
    compile 'club.minnced:java-discord-rpc:2.0.2'
}

task getDeps(type: Copy) {
    from sourceSets.main.runtimeClasspath
    into 'runtime/'
}

processResources {
    // This will ensure that this task is redone when the versions change.
    inputs.property 'version', project.version
    inputs.property 'mcversion', project.minecraft.version
    // Replace stuff in mcmod.info, Nothing else.
    from(sourceSets.main.resources.srcDirs) {
        include 'mcmod.info'
        // Replace version and mcversion.
        expand 'version': project.version, 'mcversion': project.minecraft.version
    }
    // Copy everything else except the mcmod.info.
    from(sourceSets.main.resources.srcDirs) {
        exclude 'mcmod.info'
    }
    rename '(.+_at.cfg)', 'META-INF/$1'
}

shadowJar {
    dependencies {
        include(dependency('club.minnced:java-discord-rpc'))
        include(dependency('com.googlecode.json-simple:json-simple:1.1.1'))
        include(dependency('org.spongepowered:mixin'))
    }
    exclude 'dummyThing', 'LICENSE.txt', 'org/**/*.html', 'META-INF/maven/**' // Removes unneeded files that are legit just useless text files.
    classifier = 'release' // The name at the end of the jar that will have all the sources.
}

mixin {
    defaultObfuscationEnv searge
    add sourceSets.main, 'mixins.catalyst.refmap.json' // Name for the refmap of the clients mixins.json.
}

reobf {
    shadowJar {
        mappingType = 'SEARGE'
        classpath = sourceSets.main.compileClasspath
    }
}

jar {
    manifest {
        attributes(
                'MixinConfigs': 'mixins.catalyst.json', // Name for the clients mixins.json.
                'tweakClass': 'org.spongepowered.asm.launch.MixinTweaker', // Directory for the org mixin loader.
                'TweakOrder': 0, // Actually not too sure what this is for.
                'FMLCorePluginContainsFMLMod': 'true', // Whether or not u using mcp mappings.
                'FMLCorePlugin': 'com.krazzzzymonkey.catalyst.mixin.MixinLoaderForge', // Directory for the mixin loader for the built jar.
                'ForceLoadAsMod': 'true', // Whether or not to make it load as a actual mod or not.
                'FMLAT': 'catalyst_at.cfg' // Name of the mcp mappings.
        )
    }
}

build.dependsOn(shadowJar)